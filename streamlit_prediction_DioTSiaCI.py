# -*- coding: utf-8 -*-

import os
import pandas as pd
import pickle




###########################################################################
###########################################################################
# Constantes vers les r√©pertoires et les pickles
###########################################################################
###########################################################################
#les pickles sont stock√©s dans le sous-r√©pertoire deployment



############################################################################
f = open("./INTERMED/random_forest_model.sav", "rb" )
#charger le fichier
modele=pickle.load(f)
# fermer le fichier
f.close()


with open("./INTERMED/vectorizer.sav", "rb" ) as f:
	vectorizer=pickle.load(f)


ref = 0.135



############################################################################

############################################################################
# Partie sp√©cifique √† streamlit
############################################################################
############################################################################
import streamlit as st

Description  = st.text_input("Veuillez renseigner la description de l'entreprise")




#page principale

st.header("**Pr√©diction probabilit√© de la classe positive**")

st.subheader("Donn√©es saisies")
st.write(Description)  


X_profil = pd.DataFrame(     [[         Description  ,
                               ]],
                                    columns=[ 'Description'  
                                            ]
                        )

  


if(st.button("Calculer le score d'appart√©nance √† classe positive")): 
    v = vectorizer.transform(X_profil['Description'])
    proba = modele.predict_proba(v)[:,1]

    # appeler la fonclion cliked_button lorsqu'on appui sur cliquer
    st.subheader("R√©sultat du score")
    st.write(f"Probabilit√© calcul√©e {proba}")
    if proba< ref:
       st.success("Class= False  : üëç Go Pas de probl√®me")
    else:
       st.error(f"Probabilit√© > {ref*100}*  : üò≠ Class=True")